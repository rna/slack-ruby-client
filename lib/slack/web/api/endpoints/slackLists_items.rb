# frozen_string_literal: true
# This file was auto-generated by lib/tasks/web.rake

module Slack
  module Web
    module Api
      module Endpoints
        module SlackListsItems
          #
          # Add a new item to an existing List.
          #
          # @option options [Object] :list_id
          #   ID of the List to add the item to.
          # @option options [Object] :duplicated_item_id
          #   ID of the record to make a copy of.
          # @option options [Object] :parent_item_id
          #   ID of the parent record for this subtask.
          # @option options [array] :initial_fields
          #   Initial item data.
          # @see https://api.slack.com/methods/slackLists.items.create
          # @see https://github.com/slack-ruby/slack-api-ref/blob/master/methods/slackLists.items/slackLists.items.create.json
          def slackLists_items_create(options = {})
            raise ArgumentError, 'Required arguments :list_id missing' if options[:list_id].nil?
            post('slackLists.items.create', options)
          end

          #
          # Deletes an item from an existing List.
          #
          # @option options [string] :list_id
          #   ID of the List containing the item.
          # @option options [string] :id
          #   ID of item to delete.
          # @see https://api.slack.com/methods/slackLists.items.delete
          # @see https://github.com/slack-ruby/slack-api-ref/blob/master/methods/slackLists.items/slackLists.items.delete.json
          def slackLists_items_delete(options = {})
            raise ArgumentError, 'Required arguments :list_id missing' if options[:list_id].nil?
            raise ArgumentError, 'Required arguments :id missing' if options[:id].nil?
            post('slackLists.items.delete', options)
          end

          #
          # Deletes multiple items from an existing List.
          #
          # @option options [string] :list_id
          #   ID of the List containing the items.
          # @option options [array] :ids
          #   IDs of items to delete.
          # @see https://api.slack.com/methods/slackLists.items.deleteMultiple
          # @see https://github.com/slack-ruby/slack-api-ref/blob/master/methods/slackLists.items/slackLists.items.deleteMultiple.json
          def slackLists_items_deleteMultiple(options = {})
            raise ArgumentError, 'Required arguments :list_id missing' if options[:list_id].nil?
            raise ArgumentError, 'Required arguments :ids missing' if options[:ids].nil?
            post('slackLists.items.deleteMultiple', options)
          end

          #
          # Get a row from a List.
          #
          # @option options [string] :list_id
          #   ID of the List.
          # @option options [string] :id
          #   ID of the row to get.
          # @option options [boolean] :include_is_subscribed
          #   Set to true to include is_subscribed data for the returned List row.
          # @see https://api.slack.com/methods/slackLists.items.info
          # @see https://github.com/slack-ruby/slack-api-ref/blob/master/methods/slackLists.items/slackLists.items.info.json
          def slackLists_items_info(options = {})
            raise ArgumentError, 'Required arguments :list_id missing' if options[:list_id].nil?
            raise ArgumentError, 'Required arguments :id missing' if options[:id].nil?
            post('slackLists.items.info', options)
          end

          #
          # Get records from a List.
          #
          # @option options [string] :list_id
          #   ID of the List.
          # @option options [integer] :limit
          #   The maximum number of records to return.
          # @option options [string] :cursor
          #   Next cursor for pagination.
          # @option options [boolean] :archived
          #   Boolean indicating whether archived items or normal items should be returned.
          # @see https://api.slack.com/methods/slackLists.items.list
          # @see https://github.com/slack-ruby/slack-api-ref/blob/master/methods/slackLists.items/slackLists.items.list.json
          def slackLists_items_list(options = {})
            raise ArgumentError, 'Required arguments :list_id missing' if options[:list_id].nil?
            if block_given?
              Pagination::Cursor.new(self, :slackLists_items_list, options).each do |page|
                yield page
              end
            else
              post('slackLists.items.list', options)
            end
          end

          #
          # Updates cells in a List.
          #
          # @option options [string] :list_id
          #   ID of the List to add or update cells.
          # @option options [array] :cells
          #   Cells to update.
          # @see https://api.slack.com/methods/slackLists.items.update
          # @see https://github.com/slack-ruby/slack-api-ref/blob/master/methods/slackLists.items/slackLists.items.update.json
          def slackLists_items_update(options = {})
            raise ArgumentError, 'Required arguments :list_id missing' if options[:list_id].nil?
            raise ArgumentError, 'Required arguments :cells missing' if options[:cells].nil?
            post('slackLists.items.update', options)
          end
        end
      end
    end
  end
end
