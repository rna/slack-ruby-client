# frozen_string_literal: true
# This file was auto-generated by lib/tasks/web.rake

module Slack
  module Cli
    class App
      desc 'SlackListsItems methods.'
      command 'slackLists_items' do |g|
        g.desc 'Add a new item to an existing List.'
        g.long_desc %( Add a new item to an existing List. )
        g.command 'create' do |c|
          c.flag 'list_id', desc: 'ID of the List to add the item to.'
          c.flag 'duplicated_item_id', desc: 'ID of the record to make a copy of.'
          c.flag 'parent_item_id', desc: 'ID of the parent record for this subtask.'
          c.flag 'initial_fields', desc: 'Initial item data.'
          c.action do |_global_options, options, _args|
            puts JSON.dump(@client.slackLists_items_create(options))
          end
        end

        g.desc 'Deletes an item from an existing List.'
        g.long_desc %( Deletes an item from an existing List. )
        g.command 'delete' do |c|
          c.flag 'list_id', desc: 'ID of the List containing the item.'
          c.flag 'id', desc: 'ID of item to delete.'
          c.action do |_global_options, options, _args|
            puts JSON.dump(@client.slackLists_items_delete(options))
          end
        end

        g.desc 'Deletes multiple items from an existing List.'
        g.long_desc %( Deletes multiple items from an existing List. )
        g.command 'deleteMultiple' do |c|
          c.flag 'list_id', desc: 'ID of the List containing the items.'
          c.flag 'ids', desc: 'IDs of items to delete.'
          c.action do |_global_options, options, _args|
            puts JSON.dump(@client.slackLists_items_deleteMultiple(options))
          end
        end

        g.desc 'Get a row from a List.'
        g.long_desc %( Get a row from a List. )
        g.command 'info' do |c|
          c.flag 'list_id', desc: 'ID of the List.'
          c.flag 'id', desc: 'ID of the row to get.'
          c.flag 'include_is_subscribed', desc: 'Set to true to include is_subscribed data for the returned List row.'
          c.action do |_global_options, options, _args|
            puts JSON.dump(@client.slackLists_items_info(options))
          end
        end

        g.desc 'Get records from a List.'
        g.long_desc %( Get records from a List. )
        g.command 'list' do |c|
          c.flag 'list_id', desc: 'ID of the List.'
          c.flag 'limit', desc: 'The maximum number of records to return.'
          c.flag 'cursor', desc: 'Next cursor for pagination.'
          c.flag 'archived', desc: 'Boolean indicating whether archived items or normal items should be returned.'
          c.action do |_global_options, options, _args|
            puts JSON.dump(@client.slackLists_items_list(options))
          end
        end

        g.desc 'Updates cells in a List.'
        g.long_desc %( Updates cells in a List. )
        g.command 'update' do |c|
          c.flag 'list_id', desc: 'ID of the List to add or update cells.'
          c.flag 'cells', desc: 'Cells to update.'
          c.action do |_global_options, options, _args|
            puts JSON.dump(@client.slackLists_items_update(options))
          end
        end
      end
    end
  end
end
